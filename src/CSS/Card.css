
.music-card-bg{
    background-color:  #1c1b1b;
    position: relative;
    width: 13.020833333333334vw;
    height: 16.276041666666668vw;
    left: 18.229166666666668vw;
    bottom: 2.2786458333333335vw;
    margin-top: 1.6276041666666667vw;
    transition: background-color 0.3s; 
    
    
    /* The transition property in CSS is used to control the smooth transition of CSS property values over a specified duration. 
    It allows you to create smooth and gradual changes in element styles when specific conditions are met, such as when hovering over an element.

    Here's how it works:
    
    Property Name: You specify the CSS property you want to apply the transition to. 
    For example, you can use transition: background-color to apply the transition to the background color property.
    
    Duration: You specify the duration of the transition in seconds or milliseconds. 
    This determines how long it takes for the transition to complete. For example, transition: background-color 0.3s sets the transition duration to 0.3 seconds.
    
    Timing Function (Optional): You can specify a timing function that determines the acceleration or deceleration of the transition. 
    Common timing functions include ease, linear, ease-in, ease-out, and ease-in-out.
    
    Delay (Optional): You can also add a delay before the transition begins, in seconds or milliseconds.
    
    When you apply a transition to an element, any change in the specified property 
    (e.g., a change in background color) triggered by an event (e.g., a hover event) will be animated over the specified duration. This creates a smooth and gradual effect, making the change less abrupt and more visually pleasing.
    
    In the example I provided earlier, the transition property was used to make the background color change smoothly 
    from the original color to white (background-color: #1c1b1b to background-color: #FFFFFF) when hovering over the .music-card-bg element. 
    Additionally, a transition was applied to the opacity property of text elements to make the text slightly fade in and out during the hover event. */
}

.music-card-bg:hover{
background-color: #404040;
}


.music-img{
    position: absolute;
    right: 0vw;
    top: 0.6510416666666666vw;
    
}

.music-img-hidden{
    position: absolute;
    right: 0px;
    top: 10.416666666666666vw;
    right:  0.3255208333333333vw;
    opacity: 0;
    transition: opacity 0.3s;
    z-index: 3;
}

.music-img-hidden img{
    width: 4.231770833333333vw;
    height: 4.231770833333333vw;
    z-index: 4;
    transition: opacity 0.3s;
}

.music-card-bg:hover .music-img-hidden{
    opacity: 1;
    z-index: 3;
}


.music-artist-title{
    overflow: hidden;
    white-space: nowrap;
}

.marquee {
    display: inline-block;
    overflow: hidden;
    white-space: nowrap;
    animation: marquee 10s linear infinite; /* Adjust the animation duration as needed */
}

@keyframes marquee {
    0% { transform: translateX(100%); }
    100% { transform: translateX(-100%); }
}

.music-artist{
    color: #FFFFFF;
    position: absolute;
    top: 13.736979166666666vw;
    left: 0.6510416666666666vw;
    font-weight: 400;
    font-size: 1.0416666666666667vw;
    opacity: 75%;
    max-width: 13.020833333333334vw;
}

.music-title{
    color: #FFFFFF;
    position: absolute;
    justify-content: center;
    top: 12.20703125vw;
    left:  0.6510416666666666vw;
    font-size:  1.0416666666666667vw;
    transition: opacity 0.3s;
    max-width: 22.786458333333332vw;
}

@media screen and (max-width:756px) {
    .music-img-hidden{
        display: none;
    }
}